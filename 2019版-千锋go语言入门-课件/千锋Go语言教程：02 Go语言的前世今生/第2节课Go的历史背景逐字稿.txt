大家好，我是千锋教育的韩茹老师
通过上节课的讲解
我们已经了解了一些知名的编程语言和系统
本堂课我们聊聊Go语言的前世今生
为什么需要一个新的语言？
现在的这些编程语言
对开发程度和系统效率在很多情况下不能兼得
要么执行效率高，但是开发和编译效率低，比如C++
要么执行低效，编译的效率高，如.NET、Java
所以需要一种拥有较高效的执行速度
编译速度和开发速度的编程语言
golang语言正是如此
谈到golang的产生
当然这得谈到google公司一直使用C++
受够了C++煎熬的Google
首席软件工程师罗伯.派克(Rob Pike)
在2007年9月
在Google分布式编译平台上进行C++编译
在漫长的等待过程中
他和罗伯特.格利茨默(Robert Griesemer)
探讨了程序设计语言的一些关键性问题
他们认为
简化编程语言相比于在臃肿的语言上不断增加新特性
会是更大的进步
随后他们说服了身边的肯.汤普森(Ken Thompson)
这几位牛人，他们决定创造一种新语言
几天后，他们发起了一个叫Golang的项目
把它作为自由时间的实验项目
谷歌有一个“20%时间”的工作方式
允许工程师拿出20%的时间来研究自己喜欢的项目
Google Now、Google News、Google Map等
全都是20%时间的产物
Go语言最开始也是20%时间的产物
Go语言的三个作者都是著名的IT工程师
分别是：罗伯特.格利茨默（Robert Griesemer）
罗伯.派克（Rob Pike） 和肯.汤普森（Ken Thompson）
罗勃·派克（Rob Pike），来自加拿大的程序员
曾经加入贝尔实验室，是 UNIX小组的成员
曾经参与过贝尔实验室九号计划、Inferno
与编程语言 Limbo 的开发
他与肯.汤普森（Ken Thompson）共同开发了著名的UTF-8
罗伯特·格利茨默(Robert Griesemer)是谷歌的员工
也是Go编程语言的最初设计者之一
参与设计了Java的HotSpot虚拟机
和Chrome浏览器的JavaScript V8引擎
他还研究了特定领域语言SAWZALL
和StrutTalk系统的设计和实现
他还为克雷Y-MP编写了一个矢量化编译器
为APL编写了一个解释器
现在的罗伯特已经六十多岁了
肯·汤普森（Ken Thompson）
是美国计算机科学学者和工程师
在贝尔实验室工作期间
汤普森设计和实现了Unix操作系统
他创造了B语言也就是C语言的前身
而且他是Plan9操作系统的创造者和开发者之一
2006年，汤普森进入Google公司工作
后来参与设计了Go语言
此外，汤普森还参与过正则表达式和UTF-8编码的设计
改进了文本编辑器QED
创造了ed编辑器等
现在汤普森已经是七十多岁的高龄了
谈到go的发展过程
可以先看看go的最初设计
这是一封由罗勃·派克(Rob Pike)在2007年9月25号
回复给罗伯特·格利茨默(Robert Griesemer)
和肯.汤普森（Ken Thompson）的
有关编程语言讨论主题的邮件
邮件正文大意为
在开车回家的路上我得到了一些灵感
1.给这门编程语言取名为“go”
它很简短，易于书写
2.工具类可以命名为：goc、 gol、goa
3.交互式的调试工具也可以直接命名为“go”
4.语言文件后缀名为 .go 等等
这就是Go语言名字的来源
自此之后 Robert、Rob 和 Ken 三个人
开始在 Google 内部进行了研发
一直到了2009年，Go正式开源了
Go项目团队在2009年11月10日
即该语言正式对外开源的日字作为其官方生日
源代码最初托管在 http://code.google.com 上
之后几年才逐步的迁移到 GitHub 上
接下来我们看看在Go语言发展过程中
一些比较重要的记事
这是一封由伊恩.兰斯.泰勒（Ian Lance Taylor）
在2008年6月7日写给 Robert、Rob 和 Ken的
关于 Go gcc 编译器前端的邮件
邮件正文大意如下：我的同事向我推荐了这个网站 
这似乎是一门很有趣的编程语言
我为它写了一个 gcc 编译器前端
虽然这个工具仍缺少很多的功能
但它确实可以编译网站上展示的那个素数筛选程序了
伊恩.兰斯.泰勒（Ian Lance Taylor）的加入
以及第二个编译器 (gcc go)的实现 
在带来震惊的同时，也伴随着喜悦
这对Go项目来说不仅仅是鼓励
更是一种对可行性的证明
语言的第二次实现对制定语言规范
和确定标准库的过程至关重要
同时也有助于保证其高可移植性
这也是Go语言承诺的一部分
自此之后伊恩.兰斯.泰勒（Ian Lance Taylor）
成为了设计和实现Go语言及其工具的核心人物
第二件事情是罗思.考克斯(Russ Cox) 
在2008年加入了刚成立不久的Go团队
罗思.考克斯(Russ Cox)发现 
Go方法的通用性意味着函数也能拥有自己的方法
这直接促成了 http.HandlerFunc 的实现
这是一个让Go一下子变得无限可能的特性
罗思.考克斯(Russ Cox) 还提出了更多的泛化性的想法
比如 io.Reader 和 io.Writer 接口
奠定了所有 I/O 库的整体结构
第三件事情是聘请了安全专家亚当.兰利(Adam Langley) 
帮助Go走向Google外面的世界
亚当.兰利(Adam Langley) 
为Go团队做了许多不为外人知晓的工作
包括创建最初的http://golang.org 网站
以及dashboard
不过他最大的贡献当属创建了 cryptographic 库
起先，这个库无论在规模上还是复杂度上都不成气候
但是就是这个库
在后期成为了很多重要的网络和安全软件的基础
并且成为了Go语言开发历史的关键组成部分
许多网络基础设施公司
比如 Cloudflare 都重度依赖 
亚当.兰利(Adam Langley) 在Go项目上的工作
在 beego 设计的时候
session 模块设计
也得到了亚当.兰利(Adam Langley)的很多建议
第四个事情就是一家叫做 Docker 的公司
就是使用 Go 进行项目开发
并促进了计算机领域的容器行业
进而出现了像 Kubernetes 这样的项目
现在，我们完全可以说 Go 是容器语言
这是另一个完全出乎意料的结果
除了大名鼎鼎的Docker，完全用GO实现
业界最为火爆的容器编排管理系统kubernetes
完全用GO实现
之后的Docker Swarm，完全用GO实现
除此之外，还有各种有名的项目
如etcd/consul/flannel，七牛云存储等等
均使用GO实现
有人说，GO语言之所以出名，是赶上了云时代
但为什么不能换种说法
也是GO语言促使了云的发展？
除了云项目外
还有像今日头条、UBER这样的公司
他们也使用GO语言对自己的业务进行了彻底的重构
Go语言是谷歌2009年发布的
第二款开源编程语言（系统开发语言)
它是基于编译、垃圾收集和并发的编程语言
Go语言专门针对多处理器系统应用程序的编程进行了优化
使用Go编译的程序可以媲美 C / C++代码的速度
而且更加安全、支持并行进程
作为出现在21世纪的语言
其近C的执行性能和近解析型语言的开发效率
以及近乎于完美的编译速度
已经风靡全球
特别是在云项目中
大部分都使用了Golang来开发
不得不说，Golang早已深入人心
而对于一个没有历史负担的新项目
Golang或许就是个不二的选择
很多人将Go语言称为21世纪的C语言
因为Go不仅拥有C的简洁和性能
而且还很好的提供了21世纪
互联网环境下服务端开发的各种实用特性
被称为Go语言之父的罗勃·派克(Rob Pike)就曾说过
你是否同意Go语言
取决于你是认可少就是多
还是少就是少(Less is more or less is less)
Go语言的整个设计哲学就是
将简单、实用体现得淋漓尽致
如今 Go 已经是云计算编程语言
GO语言背靠Google这棵大树
又不乏牛人坐镇，是名副其实的“牛二代”
想象一下：一个只有十几年发展经历的编程语言
已经成为了如此巨大
而且正在不断发展的行业的主导者
这种成功是每个人都无法想象的
为了方便大家交流学习
请大家加入千锋教育Go语言学习营
QQ群号是784190273
好，关于Go的发展过程，我们先讲这些
感谢您的观看，再见！








